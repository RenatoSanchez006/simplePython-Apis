{"_id":{"$oid":"5cd281f0680dad4efe44f7a4"},"title":"basics","info":"\u003cp\u003ePython is a simple programming language. It is very easy to pick up if you're a first timer.\n\u0009\u0009\u0009\u0009\u0009\u0009You can use it for developing desktop GUI (graphic user interface) applications, websites\n\u0009\u0009\u0009\u0009\u0009\u0009and web applications.\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003eUseful points to keep in mind:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cul class=\"ui list\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003ePython has a very straightforward syntax.\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003ePython was made to both look good and be easy to read.\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003eSome of its syntax comes from the programming language C.\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003eIf you get stuck with any python syntax, you can look up anything online.\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/ul\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003eThe most basic thing to learn is how to display something on the screen. Here is what you\n\u0009\u0009\u0009\u0009\u0009\u0009need to do to display \"Hello World!\":\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cdiv class=\"ui segment\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003eprint (\"Hello World!\")\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003eTo comment your code in python you simply write a hashtag before the comment, like this:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cdiv class=\"ui segment\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003e# This is a comment\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/div\u003e","__v":0}
{"_id":{"$oid":"5cd282297bf2914f25bcfe2b"},"title":"variables","info":"\u003cp\u003eSometimes you need to assign variables so you can use them later on in your code. The most basic\n\u0009\u0009\u0009\u0009\u0009\u0009variable types in python are integers, floating point numbers, characters, strings and booleans.\n\u0009\u0009\u0009\u0009\u0009\u0009Here is what you need to do to assign a value to a variable:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cdiv class=\"ui segment\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003ea = 5\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003eb = \"hello\"\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003ec = false\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/div\u003e","__v":0}
{"_id":{"$oid":"5cd28253f221d14f4213a87b"},"title":"operators","info":"\u003cp\u003eOperators are used to manipulate the value of operands. Some of the most commonly used operators\n\u0009\u0009\u0009\u0009\u0009\u0009include:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cul class=\"ui list\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003eAddition (+)\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003eSubtraction (-)\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003eMultiplication (*)\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003eDivision (/)\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003eModulus (%)\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/ul\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003eTo understand better, here are some examples:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cdiv class=\"ui segment\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003ea + b = 5\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003ec - d = 10\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003ec / a = 2\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003eThere are comparison operators as well. They are used to compare the values with each other and\n\u0009\u0009\u0009\u0009\u0009\u0009decide the relation between them. The easiest things to compare are variables but you can\n\u0009\u0009\u0009\u0009\u0009\u0009compare anything including functions and operations The most commonly used comparison operators\n\u0009\u0009\u0009\u0009\u0009\u0009include:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cul class=\"ui list\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003eEqual (==)\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003eNot equal (!=)\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003eGreater than (\u003e)\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003eLess than (\u0026lt;)\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003eGreater than or equal (\u003e=)\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cli\u003eGreater than or equal (\u0026lt;=)\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/ul\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003eConsidering that a = 5 and b = 4, here is an\n\u0009\u0009\u0009\u0009\u0009\u0009example of variable comparisons:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cdiv class=\"ui segment\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003e#This will give you false:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003ea == b\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003e#This will give you true:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003ea != b\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003e#This will give you true:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003ea \u003e b\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/div\u003e","__v":0}
{"_id":{"$oid":"5cd28287f221d14f4213a87e"},"title":"lists","info":"\u003cp\u003eLists can be very useful. They can contain any type of variable and you can have as many as you\n\u0009\u0009\u0009\u0009\u0009\u0009wish. Here is an example of a list with 3 string items:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cdiv class=\"ui segment\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003efruitList = [\"apple\", \"banana\", \"strawberry\"]\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/div\u003e\n\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003eYou can access a specific item in the list, but remember that the list starts with index 0. Here\n\u0009\u0009\u0009\u0009\u0009\u0009is an example:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cdiv class=\"ui segment\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003e#This will return \"banana\":\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003efruitList[1]\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/div\u003e","__v":0}
{"_id":{"$oid":"5cd282eab6057d4f84ffafc5"},"title":"conditions","info":"\u003cp\u003eConditions are evaluated using booleans in python. You can evaluate anything including functions.\n\u0009\u0009\u0009\u0009\u0009\u0009When an expression is evaluated, it returns TRUE or FALSE, like for example:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cdiv class=\"ui segment\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003e#This will return false:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003eif 5 \u003e 10:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u0026emsp;print(\"5 is greater than 10\")\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003eelse:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u0026emsp;print(\"5 is smaller than 10\")\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003eNow imagine that the function funct1 returns 100 and the function funct2 returns 500:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cdiv class=\"ui segment\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003e#This will return false, therefore the code inside the if will NOT be executed:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003eif funct1 == funct2\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003e#This will return true, therefore the code inside the if will be executed:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003eif funct1 != funct2\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/div\u003e","__v":0}
{"_id":{"$oid":"5cd28307b6057d4f84ffafc6"},"title":"loops","info":"\u003cp\u003eThere are only 2 types of loops in python: for loop and while loop. Both of them itirate through\n\u0009\u0009\u0009\u0009\u0009\u0009something as many times as specified.\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003eThe syntax for a for loop is: \"for iterateVariable in iterationThing\" where iterateVariable is\n\u0009\u0009\u0009\u0009\u0009\u0009the variable that will iterate one by one through the iterationThing which is the sequence. This\n\u0009\u0009\u0009\u0009\u0009\u0009is and example of a for loop:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cdiv class=\"ui segment\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003eveggieList = [\"beans\", \"carrots\", \"lettuce\"]\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003efor x in VeggieList: \u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u0026emsp;print (x)\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003eThe solution to this for loop is:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cdiv class=\"ui segment\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003ebeans\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003ecarrots\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003elettuce\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003eThe syntax for a while loop is: \"while condition\" where condition is what will be evaluated. So\n\u0009\u0009\u0009\u0009\u0009\u0009for as long as the condition is true, the code inside the while loop will be executed, otherwise\n\u0009\u0009\u0009\u0009\u0009\u0009it won't be executed. This is and example of a while loop:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cdiv class=\"ui segment\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003ei = 10\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003ewhile i \u003e 8:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u0026emsp; print (\"Inside while loop\")\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u0026emsp; i = i + 1\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003eThe solution to this for loop is:\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cdiv class=\"ui segment\"\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003eInside while loop\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u0009\u003cp\u003eInside while loop\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003c/div\u003e","__v":0}
{"_id":{"$oid":"5cd28326b6057d4f84ffafc7"},"title":"lreom","info":"\u003cdiv\u003eLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\u003c/div\u003e","__v":0}
